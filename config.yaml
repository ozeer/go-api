# 验证码配置
captcha:
    key-long: 6 # 验证码数字长度
    img-width: 240 # 验证码图片的宽度
    img-height: 80 # 验证码图片的高度
    open-captcha: 0 # 是否开启防爆次数
    open-captcha-timeout: 3600 # 缓存超时时间
# 跨域配置
cors:
    # mode: strict-whitelist
    mode: all
    whitelist:
        - allow-origin: example1.com
          allow-methods: POST, GET
          allow-headers: Content-Type,AccessToken,X-CSRF-Token, Authorization, Token,X-Token,X-User-Id
          expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
          allow-credentials: true
        - allow-origin: example2.com
          allow-methods: GET, POST
          allow-headers: content-type
          expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
          allow-credentials: true
# 数据库列表配置
db-list:
    - disable: true
      type: ""
      alias-name: ""
      path: ""
      port: ""
      config: ""
      db-name: ""
      username: ""
      password: ""
      prefix: ""
      singular: false
      engine: ""
      max-idle-conns: 10
      max-open-conns: 100
      log-mode: ""
      log-zap: false
# 邮箱配置
email:
    to: xxx@qq.com
    port: 465
    from: xxx@163.com
    host: smtp.163.com
    is-ssl: true
    secret: xxx
    nickname: test
# excel配置
excel:
    dir: ./resource/excel/
# JWT配置
jwt:
    signing-key: c7fe1c44-0655-4a6f-a17c-a7daa8b2178a
    expires-time: 7d
    buffer-time: 1d
    issuer: qmPlus
# 本地配置
local:
    path: uploads/file
    store-path: uploads/file
# MySQL配置
mysql:
    path: 127.0.0.1
    port: "3306"
    config: charset=utf8mb4&parseTime=True&loc=Local
    db-name: go-api
    username: root
    password: "123456"
    prefix: ""
    singular: true
    engine: ""
    max-idle-conns: 10
    max-open-conns: 100
    log-mode: error
    log-zap: false
# Redis配置
redis:
    db: 0
    addr: 127.0.0.1:6379
    password: "123456"
# 系统配置
system:
    env: public # 环境
    addr: 8888 # 服务启动端口
    db-type: mysql # 使用的关系数据库类型
    oss-type: local # 使用的oss类型
    use-multipoint: false # 是否启用多点登录拦截
    use-redis: true # 是否使用Redis
    iplimit-count: 15000 # 限制1小时访问15000次
    iplimit-time: 3600 # 限制1小时内的访问
    router-prefix: "" # 路由前缀
    app-name: "go-api"
    gin_mode: "release" # GIN_MODE: debug、release、test
# 定时器
timer:
    start: true
    spec: '@daily'
    with_seconds: false
    detail:
        - tableName: sys_operation_records
          compareField: created_at
          interval: 2160h
        - tableName: jwt_blacklists
          compareField: created_at
          interval: 168h
# zap日志配置
zap:
    level: info # 日志级别
    prefix: '' # 日志前缀
    format: json # 日志格式
    director: log # 日志写入目录
    encode-level: LowercaseLevelEncoder # 日志编码器类型
    stacktrace-key: stacktrace # 栈名
    max-age: 0 # 日志留存时间
    show-line: true # 显示行
    log-in-console: true # 输出控制台
